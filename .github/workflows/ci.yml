name: ci
on:
  push:
    branches:
      - main
permissions: write-all
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          PGDATABASE: aurora
          POSTGRES_DB: aurora
          POSTGRES_USER: vscode
          POSTGRES_HOSTNAME: localhost
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Run tests with coverage report output
        run: go tool ginkgo -r -coverprofile=coverprofile.out
        env:
          AURORA_DATABASE_URL: "postgres://vscode@localhost:5432/aurora"
      - uses: k1LoW/octocov-action@v1
  docker:
    runs-on: ubuntu-latest
    needs: ["test"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/aws-contrib/aurora
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=edge,branch=main
      - name: Build and push multi-platform image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/docker/Dockerfile
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          push: true
